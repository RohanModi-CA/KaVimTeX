import sys
import socket
from PyQt5.QtCore import QUrl, QSocketNotifier, QThread, pyqtSignal, QObject
from PyQt5.QtWidgets import QApplication, QMainWindow
from PyQt5.QtWebEngineWidgets import QWebEngineView

PORT = 63001

class WebEngineView(QWebEngineView):
    def __init__(self):
        super().__init__()
        self.setHtml("<html><body><h1>Placeholder</h1></body></html>")

class ServerThread(QThread):
    new_html_received = pyqtSignal(str)

    def __init__(self, parent=None):
        super().__init__(parent)
        self.server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        self.server_socket.bind(('0.0.0.0', PORT))
        self.server_socket.listen(1)
        self.client_socket = None

    def run(self):
        while True:
            self.client_socket, addr = self.server_socket.accept()
            self.handle_client(self.client_socket)

    def handle_client(self, client_socket):
        while True:
            data = client_socket.recv(1024)
            if not data:
                break
            html_content = data.decode('utf-8')
            self.new_html_received.emit(html_content)
        client_socket.close()

class MainWindow(QMainWindow):
    def __init__(self):
        super().__init__()
        self.web_view = WebEngineView()
        self.setCentralWidget(self.web_view)
        self.server_thread = ServerThread()
        self.server_thread.new_html_received.connect(self.update_html)
        self.server_thread.start()

    def update_html(self, html_content):
        self.web_view.setHtml(html_content)

def main():
    app = QApplication(sys.argv)
    main_window = MainWindow()
    main_window.show()
    sys.exit(app.exec_())

if __name__ == '__main__':
    main()

